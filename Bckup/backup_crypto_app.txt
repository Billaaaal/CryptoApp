package com.example.cryptoapp

import android.os.Bundle
import android.util.Log
import android.widget.Button
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import androidx.recyclerview.widget.LinearLayoutManager
import androidx.recyclerview.widget.RecyclerView
import com.chaquo.python.PyObject
import com.chaquo.python.Python
import com.chaquo.python.android.AndroidPlatform

class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        supportActionBar?.hide()

        initPython()

        var returned = initialize("oh")

        var refresh = findViewById<androidx.swiperefreshlayout.widget.SwipeRefreshLayout>(R.id.refresh)

        //val button = findViewById<Button>(R.id.button)

        // button.setOnClickListener {
        //    initPython()
        //    refresh_list()

        //}

        refresh.setOnRefreshListener {
            //Log.i("INITIAL", returned.toString())
            //Log.i("NEW", getRequest().toString())


            var temp = getRequest()
            if (returned == temp.toString()){
                var returned = initialize("hello")
                Toast.makeText(this@MainActivity, "Up to date".toString(), Toast.LENGTH_SHORT).show()
                refresh.isRefreshing = false

            }else{
                //refresh()
                var returned = initialize("hello")
                refresh.isRefreshing = false

            }


        }



    }

    fun refresh(){

        //refresh()


    }

    fun initialize(sar:String):String{
        // getting the recyclerview by its id
        var recyclerview = findViewById<RecyclerView>(R.id.recyclerview)

        // this creates a vertical layout Manager
        recyclerview.layoutManager = LinearLayoutManager(this)

        // ArrayList of class ItemsViewModel
        var data = ArrayList<ItemsViewModel>()

        // This loop will create 20 Views containing
        // the image with the count of view
        //for (i in 1..20) {
        //data.add(ItemsViewModel(R.drawable.ic_baseline_folder_24, "Item $i"))
        //}

        var returned = getRequest()

        //('Ethereum', 'eth', 2, 2457.99, 'https://assets.coingecko.com/coins/images/279/large/ethereum.png?1595348880', -0.1565)


        //val he = returned[0]

        //val hez = he[0]

        //var nameOfClass = he::class.simpleName

        Toast.makeText(this@MainActivity, sar, Toast.LENGTH_SHORT).show()

        for (crypto in returned){

            var crypto = crypto.asList()

            var coin_name = crypto[0].toString()
            var coin_symbol = crypto[1].toString()
            var coin_rank = crypto[2].toString()
            var coin_price = crypto[3].toString()
            var coin_change_percentage = crypto[4].toString()
            var change_status = crypto[5].toString()
            var coin_image = crypto[6].toString()


            //var coin_name = "Name"
            //var coin_symbol ="Symbol"
            //var coin_rank = "R"
            //var coin_price = "Price"
            //var coin_change_percentage = "Perc."
            //var coin_image = " "



            //Toast.makeText(this@MainActivity, crypto[0].toString(), Toast.LENGTH_SHORT).show()


            //Toast.makeText(this@MainActivity, coin_name, Toast.LENGTH_SHORT).show()

            if (sar == "hello"){
                coin_name = "hello"


            }else{
                

            }

            data.add(ItemsViewModel(R.drawable.ic_baseline_folder_24, coin_name, coin_symbol, coin_rank, coin_price, coin_change_percentage,change_status, coin_image))



            //data.add(ItemsViewModel(R.drawable.ic_baseline_folder_24, coin_name, coin_symbol, coin_rank, coin_price, coin_change_percentage,change_status, coin_image))


        }


        // This will pass the ArrayList to our Adapter
        var adapter = CustomAdapter(data)

        // Setting the Adapter with the recyclerview
        recyclerview.adapter = adapter

        //var returned = getRequest()

        return returned.toString()




        //val he = returned[0]

        //val hez = he[0]

        //var nameOfClass = he::class.simpleName

        //for (crypto in returned){

        //    var crypto = crypto.asList()

        //    Toast.makeText(this@MainActivity, crypto[0].toString(), Toast.LENGTH_SHORT).show()

        //}

        //Toast.makeText(this@MainActivity, returned.toString(), Toast.LENGTH_SHORT).show()
        //Log.i("TAG", returned.toString())


    }

    private fun initPython(){
        if (!Python.isStarted()){
            Python.start(AndroidPlatform(this))

        }

    }

    private fun getRequest(): MutableList<PyObject> {
        var python = Python.getInstance()
        var pythonFile = python.getModule("crypto_get")
        return pythonFile.callAttr("get_crypto").asList() //return pythonFile.callAttr("main_request", userInput).toString()




    }
}